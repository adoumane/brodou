
----------------------- REVIEW 1 ---------------------
PAPER: 27
TITLE: Constructive completeness for the linear-time mu-calculus
AUTHORS: Amina Doumane

Overall evaluation: 1

----------- Overall evaluation -----------
The paper gives a *constructive* proof for linear-time mu-calculus w.r.t. Kozens’s axiomitization.
Constructive here means: it exhibits an effective method that provides an algorithm as proof object
Prior proofs have been non-constructive in the sense that they involve naive enumeration.
(In that sense, constructive here does not mean constructive in the sense of constructive logic as opposed to classical logic).
The main result is Theorem 6.

The overall advantage is that it provides additional insight
into the relationship between mu-calculus and automata theoretical techniques
that are used here. The author investigates the earlier proofs in detail, and in doing so, discovers parts that made them non-constructive and provides alternative constructive techniques instead.
Earlier proofs rely on a no constructive Cut-elimination step.

% Amina: Qu'est ce qu'il veut dire par là.

The author breaks the problem down into simpler sub-problems that
eventually reduce to automata problems over alternating parity word automata (APW) over infinite
words.
A key aspect is to circumvent direct use of the \nu-rule,
that introduces a "guessed" component by replacing it with simpler rule,
related to work on thin refutations by Kozen in [6].


Presentation:
+The Introduction explains the proof structure in very reasonable detail.
+Overall the paper is mostly self-contained and accessible to a non-expert as myself.
+The paper has plenty of examples that illustrate definitions.
- The five steps I-V in intro should be explained in words because some notation has not been introduced yet.

% Amina: I will do so

It would be useful to see an explicit diagram that shows dependencies used in the
proof of Theorem 6 to make the algorithmic aspect clear, because this is,
after all the key contribution. In the current presentation this remains quite implicit, as the author says
"We can adapt it to get an algorithm ..", well, then do so in the paper, or else

% Amina: The algorithm is descibed in the proof of theorem 6, the presentation can certainly be improved, by % provinding a diagram as suggested by R1, but the algorithm is explicit. There is a misundertanding by R1 
% of the following sentence: "We can adapt it to get an algorithm ..". The full sentence is: "The proof of  % Theorem 6  describes an algorithm that outputs a μLK proof for every valid formula. We can adapt it to get
% an algorithm that takes an arbitrary formula φ and outputs either a
% proof of φ if φ is valid; or a word u \notin M(φ)." In other words, we can improve our algorithm to get  
% one  that does not only output proofs for valid formulas, but also counterexamples for non-valid ones. 


one could say the same thing about the earlier proofs, except that here the "adapt phase" is easier.

% No we can't: in earlier proofs the algorithmic aspect is not simply hidden, it is inexistent: their 
% arguments rely on proofs by cotradiction, which cannot, turned to our knouwledge, into a direct proof. 

Relevance:
This is a traditional LICS topic, although theoretical, the insights are foundational
and may have practical relevance.

Technical depth:
As a non-expert I do not know how surprising the result is,
but to me, even though it seems not to be a breakthrough result,
still, it seems to have moderate to high technical difficulty.


Details:

Example 2: I don't understand the point of this definition, why do you need tree vs graph,
they seem just slightly different representations of the same thing?

% It is not absolutely necessay, but simplifies the presentation at some points. The tree 
% of a formula is the standard notion. What we need more frenquently is the notion of the graph:
% threads of a formula (central notion in this paper) can be seen as paths in the graph of this formula,
% which is a nice graphical intuition.

Example 4: \rho_1 has the branch q -> (p,p) but there is no transition (q,a,{p})
did you forget this transition?

% This is a typo: one should read q -> (p,q).

Overall:
I lean towards acceptance but have low confidence as a non-expert.

----------------------- REVIEW 2 ---------------------
PAPER: 27
TITLE: Constructive completeness for the linear-time mu-calculus
AUTHORS: Amina Doumane

Overall evaluation: 2

----------- Overall evaluation -----------
This paper provides a proof of completeness for the
linear-time mu calculus. Unlike previous proofs, the proof here is
constructive: given a valid formula, the author shows how to
construct a proof in Kozen's well known axiomatisation.

Roughly speaking, the idea is to encode a given formula as an
alternating parity automaton, which is then converted through
successive transformations into a deterministic Buchi automaton.
The trick is that all these automata can themselves be encoded as
mu-calculus formulae, and so the correctness of each transformation
becomes an entailment, for which a proof in Kozen's axiomatisation
can be constructed. The proofs constructed at each stage are
circular proofs, but are always in a kind of normal form such that
they can be translated into induction proofs, using a general
result from a LICS'16 paper [16] by the author and others. Although
this earlier result is of vital importance technically, the
constructions in this paper are nontrivial in their own right.

Although completeness for the (linear-time) mu-calculus is of
course already known, it is certainly interesting and quite nice to
have a fully constructive proof, so I think the contribution is a
nice one that ought to be of interest to LICS. The high-level
structure of the proof comes across very clearly and is easy to
follow. I did not follow closely the details of the constructions
for the proofs of each transformation, I have no reason to doubt
their correctness. The proof development is well structured and
seems reasonably thorough, but the proofs of individual results are
all quite short. 

I found myself wondering whether they are as
simple as they seem, or whether the devil is in the detail;
unfortunately there is no pointer to a full version of the proofs,
whether they are simple or not.

% One of the contributions of the paper is to find the right 
% levers, the right sub-problems so that the proof is constructive 
% but also easy (to follow), compared to earlier proofs, 
% whihc are more intricate.


The paper is very well written; it is very clear about what is
going on conceptually and technically. Many readers not especially
familiar with the area would still be able to approach and learn
something from this paper.

Overall, I come down in favour of accepting this paper.

----------------------- REVIEW 3 ---------------------
PAPER: 27
TITLE: Constructive completeness for the linear-time mu-calculus
AUTHORS: Amina Doumane

Overall evaluation: 2

----------- Overall evaluation -----------
The aim of this paper is to prove a *constructive* completeness result for the
linear-time mu-calculus, a slightly simpler version of the standard modal
mu-calculus where the only modality is the next-time operator of linear-time
modal logic.
Here the word *constructive* refers to the requirement that there is an
algorithm that produces an actual derivation for an arbitrary valid formula,
rather that just the statement concerning the existence of such a derivation.
The main derivation system that she wants to prove to be complete in this sense
is the system \mu-LK, a linear-time version of Kozen's axiomatization for the
modal mu-calculus.

The method by which the author sets out to prove this result is automata
theoretic in nature. It is well known that formulas of this language correspond
to omega automata (finite automata operating on infinite words). These automata
may take various shapes; of relevance to the author are the following classes:
(1) alternating parity automata (APW),
(2) nondeterministic parity automata (NPW),
(3) nondeterministic Buechi automata (NBW), and
(4) deterministic Buechi automata.
The author then shows that for any formula \phi = \phi_0 in the linear-time
mu-calculus, there are formulas phi_i (i = 1,2,3,4) such that \phi_i is
associated with an automaton A_i of the corresponding class in the enumeration
above. Furthermore, these formulas and automata are effectively obtained from
\phi, and satisfy the following:
(i) \phi_0 is semantically equivalent to \phi_1 and A_i, for i = 1,2,3,
(ii) \phi_4 is a simple valid formula
(iii) there are effectively obtainable derivations in \mu-LK showing that
\phi_{i+1} proves \phi_i, for i = 1,2,3, and for i=4 in case \phi_0
is valid.
Basically, the difficulty in this approach lies in showing that the well-known
transformations of automata between the classes 1, 2 and 3, and the translations
between mu-calculus formulas and alternating parity automata, do not only
provide *semantically* equivalent formulas/automata (i): at least the relevant
implications can be lifted to the level of provability. In some sense then,
this work can be seen as the continuation of the work of Walukiewicz and
Kaivola. In any case, the submission is a continuation of earlier work by the
author and co-authors, which takes care of the final steps of this procedure.

I agree with the author that it is of interest and importance to obtain
constructive completeness proofs for the linear-time mu-calculus (and for other
mu-calculi), although I also think that the differences between proof-theoretic
approaches and other methods such as games or tableaux are often exaggerated.

% Je ne sais vraiment pas à quoi il fait référence.

It also seems to me that the proofs given by the author are correct, although
I did not have time to check all the details. Furthermore, I find the approach
taken here, mixing ideas from automata and proof theory, quite interesting.
I so have some doubts whether all these layers are needed for a constructive
completeness proof: I would expect that shortcuts will be found in the future.

% Futur work section?   

Finally, the paper is generally well written (although somewhat sloppy in
places). I can recommend the paper for acceptance at LICS.

Below I list some suggestions and corrections.

[General] A reference that I was missing is the paper by Enqvist, Seifan and
Venema in CSL 2016, since these authors mix automata with proof theory
in a similar way. In particular, Theorem 1 in the current submission looks
very much like their Proposition 24. (Note that the mentioned paper does
cover the linear mu-calculus.)

% Thank you for the reference. It is indeed a work that have to be mentioned.

[General] There seems to be a LaTeX issue with the notation for the next time
modality; some of its occurrences there is way too much space surrounding
it.
[2L, Definition 1] When defining \leq as the subformula ordering, please say
that $\phi \leq \psi$ means that $\psi$ is a subformula of $\phi$. At least
to me the notation was rather counterintuitive.

% Si je réponds, je lui donne l'impression qu'il n'a rien compris?

[3L,-2] F -->\phi
[3R,+7] do --> does
[3R,+13] calculus --> calculi
[3R, Definition 3] It would be good to mention that \alpha and \beta being
disjoint means that neither is a sub-address of the other.
[3R, Definition 4] It would be good to mention that \land and \lor as
operations on occurrences, are partial.
[4L,+1] A ---> An. Same in proposition 1.
[4L, Definition 7] Clarify that Inf(\bar{t}) consists of formulas, not of
occurrences.
[4R, Fig.1] There's a comma missing the rule for the next time operator.
[4R, Definition 8] pair --> a pair
[4R, Definition 9] Is this definition of validity of a branch correct?
I would expect a *universal* rather than an *existential* statement
concerning the nature of the threads.
[4R,-3] Are (sub-)derivations the same objects as (sub-)proofs?
[5R, Definition 14] This definition is sloppy. I guess that you want every
subformula to satisfy then property that every bound variable occurs in
the scope of a next time connective.
[5R,+23] Were thin refutation already introduced in [6]? Please check.
[5R,-7] In III-A, we recall --> We recall in III-A
[5R,-6] int --> into
[6L, Example 4] In the leftmost run tree, the final sequence should read
qppp instead of pppq
[6R, Definition 19] What is $q^{\bottom}$?

% Sorry, I meant $\neg q$, the negation of $q$

[6R, Definition 20] The definition of a run-section could be simplified:
since you require $t_i = (q_i,a_i,E_i)$ you do not need q_i.

% Yes thank you. 

[7L] In the graph figure, the \mu and \nu should be swapped. This
propagates to Example 7 (and possibly further).

% Yes. 

[7R, Proposition 7] Something is missing here.

% Proposition 7 should be: Let A be an APW. A thread t of [A] 
is a nu-thread iff rho(t) is accepting.

[7R,+21] `Their definition ...' Who are `they'?

% I was referring to Janin and Walukiewicz's definition of formulas
sematics, introduced in [12]. 

[7R, Definition 26, Remark 2] This way of introducing `the' F-derivation is
very confusing. Also note that it is not so obvious that all F-derivations
share the same premises, this works because you work with occurrences.

% Ah bon?

[8L, Definition 27] What is an *open* derivation?


% An open derivation is a derivation having premisses
that are not justified. For instance if we set $\phi=\mu X. T\wege X$, the following
derivation is open, having the open premisse \vdash \phi. It is standard proof-theoretical vocabulary,
but deserve to be introduced properly in the paper.

--------(T)
\vdash T          \vdash \phi
-----------------------------
\vdash T\wedge \phi 
------------------------ (mu) 
\vdash \phi


[8L,-20] dos --> does
[8L,-4,-3] conjuction --> conjunction
[9L,+13] Did you mention that you would use $\emptyset$ as notation for
the empty sequence?
[9L,-10,-5] Speaking of *the* successor is very confusing.
[10L,-8] Something wrong with f_2(p) and f_2(q) here.
[10R, Definition 33] Is this definition correct? I would expect something
stronger than the statement that `each son of $v$ is labelled with one
of the states of $\sigma_n(q)$'.

[10R,+9] sates --> states
[10R, Proposition 12] For very --> For every
[11L, Proposition 13] Don't you want to state that $\pi$ is thin?
[11R, Proposition 13] Don't you want to state that $\theta$ is thin?

% Yes tahnk you.

[11R, Theorem 4] `.' missing
[12R,+3] groing --> growing
[12R,+15] deterministic alternating parity automata --> nondeterministic
parity automata

------------------------------------------------------
